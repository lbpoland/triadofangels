/*
================================================================================
File: music.css
Location: C:\Users\lbpol\Development\triadofangels\css\music.css
--------------------------------------------------------------------------------
Purpose:
Styles for the Music page, creating a clean catalog-style layout for albums with a
responsive design that switches to a horizontal carousel on mobile devices. Includes
mobile-only artist dropdowns and album-specific dropdowns for both desktop and mobile.

Key Features:
- Album Grid: Grid layout for desktop, swipeable carousel for mobile.
- Artist Links: Buttons on desktop, dropdowns on mobile ("Stream Now" and "Buy Now").
- Album Dropdowns: "Stream Now" and "Buy Now" dropdowns below each album, spanning image width, on both desktop and mobile.
- Responsive Design: Adapts seamlessly to desktop, tablet, and mobile screens.
- Accessibility: High contrast, focus states, touch-friendly targets, ARIA attributes.
- Performance: Optimized for fast rendering and smooth scrolling.
================================================================================
*/

/* ========== DESKTOP STYLES (Base Styles for >768px) ========== */
/*
  Album Catalog Container
  Purpose: Defines the main container for album sections.
  How it works:
    - `padding: 40px 20px`: Adds consistent spacing around the section.
  Customization:
    - Adjust `padding` to change spacing (e.g., `30px 15px` for less padding).
    - Add `background` or `border` for visual effects.
*/
.album-catalog {
  padding: 40px 20px;
}

/*
  Album Grid
  Purpose: Arranges albums in a responsive grid layout for desktop.
  How it works:
    - `display: grid`: Creates a grid layout.
    - `grid-template-columns: repeat(auto-fill, minmax(200px, 1fr))`: Automatically fills columns with at least 200px width.
    - `gap: 20px`: Adds spacing between grid items.
    - `max-width: 1200px`: Limits grid width for large screens.
    - `margin: 0 auto`: Centers the grid.
  Customization:
    - Change `minmax(200px, 1fr)` to adjust column width (e.g., `minmax(250px, 1fr)`).
    - Modify `gap` for different spacing.
    - Adjust `max-width` for wider/narrower grids.
*/
.album-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 20px;
  max-width: 1200px;
  margin: 0 auto;
}

/* Default state: Hidden on all screen sizes */
.scroll-hint {
  display: none !important;
}

/*
  Album Block
  Purpose: Styles individual album cards.
  How it works:
    - `background: #222`: Dark background for contrast.
    - `padding: 15px`: Adds internal spacing.
    - `border-radius: 8px`: Rounds corners.
    - `text-align: center`: Centers content.
    - `transition: transform 0.3s ease`: Enables smooth hover scaling.
  Customization:
    - Change `background` to a different color (e.g., `#333`).
    - Adjust `padding` or `border-radius` for different card styles.
    - Modify `transition` for different hover effects (e.g., `0.2s` for faster).
*/
.album-block {
  padding: 15px;
  border-radius: 8px;
  text-align: center;
  transition: transform 0.3s ease;
}

/*
  Album Block Hover
  Purpose: Adds a scaling effect when hovering over an album.
  How it works:
    - `transform: scale(1.05)`: Slightly enlarges the card on hover.
  Customization:
    - Change `1.05` to a different value (e.g., `1.1` for more scaling).
    - Add `box-shadow` for a glow effect (e.g., `box-shadow: 0 4px 10px rgba(0,0,0,0.3);`).
*/
.album-block:hover {
}

/*
  Album Link
  Purpose: Styles the clickable link wrapping the album image.
  How it works:
    - `display: block`: Ensures the link fills the card.
    - `text-decoration: none`: Removes underlines.
    - `color: #f5f5f5`: Sets light text color for contrast.
  Customization:
    - Change `color` to adjust text color (e.g., `#fff`).
    - Add `font-weight` or `font-family` for different text styles.
*/
.album-link {
  display: block;
  text-decoration: none;
  color: #f5f5f5;
  z-index: 1; /* Below buttons */
  pointer-events: auto; /* Allow image clicks */
  transition: transform 0.3s ease;  
}

.album-link:hover {
  transform: scale(1.05);
}

/*
  Album Image
  Purpose: Styles the album cover image.
  How it works:
    - `width: 100%`: Fills the card width.
    - `height: 200px`: Sets a fixed height.
    - `object-fit: cover`: Ensures the image fills the space without distortion.
    - `border-radius: 8px`: Rounds corners.
  Customization:
    - Adjust `height` for different image sizes (e.g., `180px`).
    - Change `border-radius` for different corner styles.
    - Add `box-shadow` for depth (e.g., `box-shadow: 0 2px 5px rgba(0,0,0,0.2);`).
*/
.album-block img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: 8px;
}

/*
  Album Title
  Purpose: Styles the album title above the image.
  How it works:
    - `margin: 0 0 10px`: Adds space below the title.
    - `font-size: 1.2rem`: Sets a readable size.
    - `color: #f5f5f5`: Matches other text colors.
  Customization:
    - Change `font-size` to adjust text size (e.g., `1.1rem`).
    - Modify `margin` for different spacing.
    - Add `font-weight` or `color` for different styles.
*/
.album-block h4 {
  margin: 0 0 10px;
  font-size: 1.2rem;
  color: #f5f5f5;
}

/*
  Artist Links Container (Desktop)
  Purpose: Styles the container for artist streaming buttons on desktop.
  How it works:
    - `display: flex`: Arranges buttons in a row.
    - `flex-wrap: wrap`: Wraps buttons to next line if needed.
    - `justify-content: center`: Centers buttons.
    - `gap: 15px`: Adds spacing between buttons.
  Customization:
    - Change `gap` for different spacing (e.g., `10px`).
    - Adjust `justify-content` (e.g., `flex-start` for left-aligned).
*/
.artist-links .cta-buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 15px;
}

/*
  Artist Streaming Button (Desktop)
  Purpose: Styles individual artist streaming buttons on desktop.
  How it works:
    - Matches inline styles from `music.html` for consistency.
    - `padding`, `min-width`, `min-height`: Ensures clickable size.
    - `font-family: 'Montserrat', sans-serif`: Matches your font stack.
    - `transition`: Smooth hover/focus effects.
  Customization:
    - Change `background` for different colors (e.g., `background: #ffeb3b;`).
    - Adjust `font-size` for text size (e.g., `1.1rem`).
    - Modify `padding` or `min-width` for button size.
*/
.cta-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 10px 20px;
  background: linear-gradient(45deg, #f1c40f, #ffeb3b);
  color: #0a0a0a;
  text-decoration: none;
  border-radius: 25px;
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  font-weight: 600;
  text-transform: uppercase;
  transition: all 0.3s ease;
  box-shadow: 0 2px 10px rgba(241, 196, 15, 0.2);
  border: 1px solid rgba(241, 196, 15, 0.4);
  min-width: 120px;
  min-height: 44px;
}

/*
  Artist Streaming Button Hover/Focus (Desktop)
  Purpose: Enhances button interactivity.
  How it works:
    - `background`: Reverses gradient for feedback.
    - `transform: scale(1.05)`: Slightly enlarges button.
    - `box-shadow`: Increases shadow for depth.
  Customization:
    - Change `background` for different hover colors.
    - Adjust `scale` (e.g., `1.1` for more enlargement).
    - Modify `box-shadow` for different effects.
*/
.cta-button:hover,
.cta-button:focus {
  background: linear-gradient(45deg, #ffeb3b, #f1c40f);
  transform: scale(1.05);
  box-shadow: 0 4px 15px rgba(241, 196, 15, 0.4);
}

/*
  Artist Streaming Controls Container (Desktop)
  Purpose: Hides the mobile-specific artist dropdowns on desktop.
  How it works:
    - `display: none`: Ensures `.streaming-controls` is hidden for screens >768px.
  Customization:
    - No changes needed unless you want to conditionally show it on desktop.
*/
.artist-links .streaming-controls {
  display: none;
}

/*
  Album Actions Container
  Purpose: Styles the container for album-specific "Stream Now" and "Buy Now" dropdowns.
  How it works:
    - `display: flex`: Arranges dropdown buttons side by side.
    - `gap: 10px`: Adds spacing between buttons.
    - `margin-top: 10px`: Adds space above the buttons.
  Customization:
    - Change `gap` for different spacing (e.g., `15px`).
    - Adjust `margin-top` for vertical spacing (e.g., `5px`).
    - Modify `flex-direction` to `column` for vertical stacking:
      - `flex-direction: column; align-items: center;`
*/
.album-actions {
  display: flex;
  gap: 10px;
  margin-top: 10px;
}

/*
  Streaming Dropdown Container
  Purpose: Wraps the dropdown button and menu for both artist and album dropdowns.
  How it works:
    - `position: relative`: Allows absolute positioning of the menu.
    - `flex: 1`: Ensures buttons span equal width within `.album-actions`.
    - `min-width: 0`: Prevents flex items from overflowing.
  Customization:
    - Adjust `flex` to change button width ratios (e.g., `flex: 2` for wider).
    - Change `min-width` for fixed button sizes (e.g., `min-width: 150px`).
*/
.streaming-dropdown {
  position: relative;
  flex: 1;
  min-width: 0;
}

/*
  Streaming Dropdown Button
  Purpose: Styles the dropdown buttons ("Stream Now" and "Buy Now").
  How it works:
    - Matches `.cta-button` aesthetic (gradient, rounded corners, shadows).
    - `padding`, `min-width`, `min-height`: Ensures touch-friendly size.
    - `font-family: 'Montserrat', sans-serif`: Matches your font stack.
    - `transition`: Smooth hover/tap effects.
    - `cursor: pointer`: Indicates clickability.
    - `z-index: 10`: Ensures button is above the menu.
    - `width: 100%`: Spans the parent container (for `.album-actions`).
  Customization:
    - Change `background` for different colors (e.g., `background: #ffeb3b;`).
    - Adjust `font-size` for text size (e.g., `1.2rem`).
    - Modify `padding` or `min-width` for button size (e.g., `padding: 14px 30px`).
    - Update `border-radius` for corner style (e.g., `20px`).
*/
.streaming-dropdown-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 24px;
  background: linear-gradient(45deg, #f1c40f, #ffeb3b);
  color: #0a0a0a;
  text-decoration: none;
  border-radius: 25px;
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  font-weight: 600;
  text-transform: uppercase;
  transition: transform 0.3s ease;
  box-shadow: 0 2px 10px rgba(241, 196, 15, 0.2);
  border: 1px solid rgba(241, 196, 15, 0.4);
  min-width: 70px;
  min-height: 30px;
  cursor: pointer;
  z-index: 20;
  position: relative;
  width: 100%;
  pointer-events: auto;
  touch-action: manipulation;
}

.streaming-dropdown-button:hover {
  transform: scale(1.05);
}

/*
  Album Action Button
  Purpose: Specific styling for album-specific dropdown buttons to ensure they span image width.
  How it works:
    - `padding: 10px`: Slightly smaller for compact look.
    - `font-size: 0.9rem`: Slightly smaller text for balance.
  Customization:
    - Adjust `padding` or `font-size` for different button sizes.
    - Change `background` or `border-radius` for distinct styling.
*/
.album-action-button {
  padding: 10px;
  font-size: 0.9rem;
}

/*
  Streaming Dropdown Button Hover/Focus
  Purpose: Enhances button interactivity.
  How it works:
    - `background`: Reverses gradient for feedback.
    - `transform: scale(1.05)`: Slightly enlarges button.
    - `box-shadow`: Increases shadow for depth.
  Customization:
    - Change `background` for different hover colors.
    - Adjust `scale` (e.g., `1.1` for more enlargement).
    - Modify `box-shadow` for different effects.
*/
.streaming-dropdown-button:hover,
.streaming-dropdown-button:focus {
  background: linear-gradient(45deg, #ffeb3b, #f1c40f);
  transform: scale(1.05);
  box-shadow: 0 4px 15px rgba(241, 196, 15, 0.4);
}

/*
  Streaming Dropdown Menu
  Purpose: Styles the dropdown menu containing streaming or purchase links.
  How it works:
    - `position: absolute`: Positions menu below the button.
    - `top: 100%`: Aligns menu just below the button.
    - `left: 0`: Aligns menu with button’s left edge.
    - `background: #222`: Dark background for contrast.
    - `border-radius: 8px`: Rounds corners.
    - `box-shadow`: Adds depth.
    - `min-width: 150px`: Compact for mobile.
    - `width: 100%`: Spans button width.
    - `opacity: 0`, `visibility: hidden`: Hides menu by default.
    - `transition`: Smooth slide-in animation.
    - `z-index: 9`: Places menu below button but above other content.
  Customization:
    - Change `background` for different menu color (e.g., `#333`).
    - Adjust `min-width` or `width` for menu size (e.g., `min-width: 200px`).
    - Modify `border-radius` or `box-shadow` for different styles.
    - Update `top` to adjust menu position (e.g., `top: 110%` for more space).
*/
.streaming-dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  background: #222;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  min-width: 150px;
  width: 100%;
  opacity: 0%;
  visibility: hidden;
  transition: opacity 0.3s ease, transform 0.3s ease;
  transform: translateY(-10px);
  z-index: 100; /* High z-index to ensure visibility */
  pointer-events: auto;
  list-style: none;
  max-height: 330px; /* Prevent overly long menus */
  overflow-y: auto; /* Scroll if menu is too long */
  /* Debug background (remove after testing) */
  background: #222 !important;
}

/*
  Streaming Dropdown Menu (Open State)
  Purpose: Shows the menu when the button is clicked.
  How it works:
    - `opacity: 1`, `visibility: visible`: Makes menu visible.
    - `transform: translateY(0)`: Slides menu into place.
  Customization:
    - Adjust `translateY` for different animation effects (e.g., `translateY(5px)`).
    - Modify `transition` timing (e.g., `0.2s` for faster).
*/
.streaming-dropdown-menu.open {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/*
  Streaming Dropdown Menu Item
  Purpose: Styles individual links in the dropdown menu.
  How it works:
    - `display: block`: Makes links full-width.
    - `padding: 12px 15px`: Adds touch-friendly spacing.
    - `color: #f5f5f5`: Light text for contrast.
    - `text-decoration: none`: Removes underlines.
    - `font-size: 0.9rem`: Readable size.
    - `transition`: Smooth hover effect.
  Customization:
    - Change `font-size` for text size (e.g., `1rem` for larger).
    - Adjust `padding` for item spacing (e.g., `14px 20px`).
    - Modify `color` for different text color (e.g., `#fff`).
*/
.streaming-dropdown-menu li a {
  display: block;
  padding: 12px 15px;
  color: #f5f5f5;
  text-decoration: none;
  font-size: 0.9rem;
  font-family: 'Montserrat', sans-serif;
  transition: background 0.2s ease;
}

/*
  Streaming Dropdown Menu Item Hover/Focus
  Purpose: Highlights menu items on hover or focus.
  How it works:
    - `background: #333`: Darkens background for feedback.
  Customization:
    - Change `background` for different hover color (e.g., `#444`).
    - Add `color` for text color change (e.g., `color: #f1c40f`).
*/
.streaming-dropdown-menu li a:hover,
.streaming-dropdown-menu li a:focus {
  background: #333;
}


/* ========== MOBILE STYLES (<=768px) ========== */
/*
  Mobile-Specific Styles
  Purpose: Overrides desktop styles for mobile devices to create a smooth, touch-friendly interface with full album images and artist dropdowns.
  How it works:
    - Wrapped in `@media (max-width: 768px)` to apply only on mobile/tablet screens.
    - Hides `.cta-buttons` and shows `.streaming-controls` for artist links.
    - Transforms `.album-grid` into a horizontal carousel with full-size images.
    - Maintains album dropdowns with same styling as desktop.
    - Ensures performance with minimal CSS and smooth scrolling.
  Customization:
    - Edit values like `90vw`, `font-size`, `padding`, or `gap` to fine-tune the mobile experience.
    - Add new styles within this media query to customize other elements (e.g., `.hero-content`).
*/
@media (max-width: 768px) {
  .album-catalog {
    padding: 15px 10px;
    overflow-y: visible;
    max-height: none;
    box-sizing: border-box;
    position: relative; /* Allow absolute children to escape */
  }

  .album-grid {
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: thin;
	scrollbar-color: #f1c40f #111;
    gap: 7px;
    padding: 3px;
    max-height: calc(100vh - 120px);
    position: relative; /* Positioning context for menus */
  }

  .scroll-hint {
	display: block !important;
	animation: pulse 1.8s infinite ease-in-out;  
    text-align: center;
    color: #f1c40f;
    font-size: 0.9rem;
    margin-top: 5px;
  }

  @keyframes pulse {
    0% { opacity: 0.3; }
    50% { opacity: 1; }
    100% { opacity: 0.3; }
  }

  .album-grid::-webkit-scrollbar {
	height: 6px;
  }

  .album-grid::-webkit-scrollbar-track {
    background: #111;
  }

  .album-grid::-webkit-scrollbar-thumb {
    background-color: #f1c40f;
    border-radius: 6px;
  }  

  .album-block {
    flex: 0 0 90vw;
    scroll-snap-align: center;
    background: none;
    padding: 0;
    max-height: 100%;
    box-sizing: border-box;
    position: relative; /* Ensure buttons/menus position correctly */
  }

  .album-block:hover {
    transform: none;
  }

  .album-block img {
    width: 100%;
    height: auto;
    max-height: calc(100vh - 200px);
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    object-fit: contain;
  }

  .album-block h4 {
    font-size: 1.1rem;
    margin: 0 0 5px;
    color: #f5f5f5;
  }

  .artist-links .cta-buttons {
    display: none;
  }

  .artist-links .streaming-controls {
    display: flex !important;
    gap: 10px;
    justify-content: center;
    margin: 5px 0 10px;
    flex-wrap: wrap;
  }

  .album-actions {
    margin-top: 5px;
    gap: 8px;
  }

  .album-link {
    z-index: 1;
  }

  .streaming-dropdown-button {
    padding: 10px 20px;
    font-size: 1rem;
    min-width: 120px;
    min-height: 30px;
	max-width: 130px;
	max-height: 40;
    z-index: 20;
    touch-action: manipulation;
  }

  .album-action-button {
    padding: 8px;
    font-size: 0.8rem;
  }

  .streaming-dropdown-menu {
    min-width: 120px;
    max-width: 90vw;
    z-index: 100; /* Ensure menu is above all content */
    max-height: 330px; /* Limit menu height */
    overflow-y: auto; /* Scroll if needed */
  }

  .streaming-dropdown-menu li a {
    padding: 10px 12px;
    font-size: 0.8rem;
  }

  .album-catalog h2 {
    font-size: 1.8rem;
    margin-bottom: 15px;
  }

  .album-catalog h3 {
    font-size: 1.4rem;
    margin: 15px 0;
  }
}

/* ========== SMALLER MOBILE DEVICES (<=480px) ========== */
/*
  Smaller Mobile Styles
  Purpose: Fine-tunes styles for very small screens (e.g., iPhone SE, 375x667 pixels) to prevent visual or functional issues.
  How it works:
    - Reduces sizes and spacing for better fit on narrow screens.
    - Ensures horizontal-only scrolling and touch-friendly buttons.
    - Maintains polished design with no overflow or misalignment.
  Customization:
    - Adjust `85vw` in `.album-block` to change album width (e.g., `80vw` for smaller).
    - Modify `font-size` or `padding` for finer control.
*/
@media (max-width: 480px) {
  .album-block {
    flex: 0 0 85vw;
    max-height: 100%;
    box-sizing: border-box;
  }

  .album-block img {
    width: 100%;
    max-height: calc(100vh - 250px);
  }

  .album-block h4 {
    font-size: 0.9rem;
    margin: 0 0 4px;
  }

  .album-actions {
    margin-top: 4px;
    gap: 6px;
  }

  .artist-links .streaming-controls {
    gap: 6px;
    margin: 4px 0 8px;
  }

  .streaming-dropdown-button {
    padding: 6px 12px;
    font-size: 0.8rem;
    min-width: 100px;
    min-height: 40px;
  }

  .album-action-button {
    padding: 5px;
    font-size: 0.7rem;
  }

  .streaming-dropdown-menu {
    min-width: 100px;
    max-width: 85vw;
    z-index: 100; /* Ensure visibility */
    max-height: 330px; /* Smaller for narrow screens */
    overflow-y: auto;
  }

  .streaming-dropdown-menu li a {
    padding: 8px 10px;
    font-size: 0.7rem;
  }

  .album-catalog h2 {
    font-size: 1.4rem;
    margin-bottom: 10px;
  }

  .album-catalog h3 {
    font-size: 1.1rem;
    margin: 10px 0;
  }

  .scroll-hint {
	display: block !important;
	animation: pulse 1.8s infinite ease-in-out;  
    text-align: center;
    color: #f1c40f;
    font-size: 0.9rem;
    margin-top: 5px;
  }

  @keyframes pulse {
    0% { opacity: 0.3; }
    50% { opacity: 1; }
    100% { opacity: 0.3; }
  }


}

/* ========== ACCESSIBILITY ========== */
/*
  Reduced Motion Preference
  Purpose: Disables animations for users who prefer reduced motion.
  How it works:
    - `transform: none`: Removes scaling effects.
    - `transition: none`: Disables dropdown animation.
  Customization:
    - Add other reduced-motion adjustments as needed.
*/
@media (prefers-reduced-motion: reduce) {
  .album-block:hover {
    transform: none;
  }
  .streaming-dropdown-button:hover,
  .streaming-dropdown-button:focus,
  .cta-button:hover,
  .cta-button:focus {
    transform: none;
  }
  .streaming-dropdown-menu {
    transition: none;
  }
}